<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML Experimental 19960712//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 19-May-1997 experimental) -->
<HEAD>
<LINK REL=TOP HREF="model_1.htm">
<LINK REL=UP HREF="mode_135.htm">
<LINK REL=PREV HREF="mode_139.htm">
<LINK REL=NEXT HREF="mode_141.htm">
<LINK TITLE="WebMaker generated style" REL=stylesheet HREF=bootstrap.min.css TYPE="text/css"><LINK TITLE="WebMaker generated style" REL=stylesheet HREF=style.css TYPE="text/css">
<TITLE>6.5.2   MODELING RELATIONS</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 19-May-1997 experimental)">
</HEAD>
<BODY CLASS=WM-BODY><div class="container">

  <DIV>
<A NAME=HEADING140></A>

<DIV CLASS=WM-DIV-HEADERS>
<P><A HREF="mode_141.htm" class="NavPanel pull-right">[Next]</A> <A HREF="mode_139.htm" CLASS=NavPanel>[Previous]</A> <A HREF="mode_135.htm" CLASS="NavPanel pull-center">[Up]</A> <A HREF="model_1.htm" CLASS=NavPanel>[Top]</A>   </P>
<P>6.5   RULE MODELS</P>

</DIV>
<A NAME=HEADING140-0></A>
<H1 CLASS=3Heading>6.5.2   MODELING RELATIONS</H1>
<P> While using models as conditions and graphically modeling rules may make system behavior understandable to the engineer that can best model complex features, the relation between property values from different models has yet to be addressed. <A HREF="mode_139.htm#MARKER-9-106" CLASS=Body>Figure 79</A> represents a possible way of comparing model values with mathematical and relation operators. The model illustrates topological relations as well as the property relations of individual features. The rule attempted to be modeled is as follows:</P>
<BLOCKQUOTE CLASS=Extract>
<P CLASS=Extract>If rib_A is connected to rib_B</P>
<P CLASS=Extract>And rib_B is connected to base_A</P>
<P CLASS=Extract>And rib_A's height &lt; rib_B's height</P>
<P CLASS=Extract>Then answer is true</P>
</BLOCKQUOTE>
<P> There are operator models which act like integrated circuit components, with set inputs and output locations. The concept of such software ICs is akin to the object technology approach. However, whereas such encapsulation may work for large-scale modules, specification of usually straight-forward formulas reaches a tedious level of detail at this level, especially if the data has to massaged further as in <A HREF="#MARKER-9-107" CLASS=Body>Figure 81</A>. In this figure, the value of one of the rib's height is reduced by 1/4, and the detail of the visual model increases.</P>
<P> The expertise required to model at this level would probably bring the knowledge-engineer or a modeling expert back into the loop - the avoidance of which is why this type of modeling is desired in the first place. It is difficult not only to program at this level of detail, but also to implement within a modeling system.</P>
<P>  It was at this level that the Onedim proof-of-concept was stopped. Visual modeling perhaps must deal with higher-level abstractions. Once imperative sequences must be modeled, as with property relations or iteration constructs, the 3GL languages are best reverted to.</P>
<P>Figure 80    Visual Relations</P><P><IMG ALIGN=TOP SRC=mo14im75.gif>
<P>Figure 81    <A NAME=MARKER-9-107></A>More Complicated Visual Relations</P><P><IMG ALIGN=TOP SRC=mo14im76.gif>

</DIV>

 

<DIV>

<!-- TOC -->

</DIV>

 <DIV CLASS=WM-DIV-FOOTERS><HR CLASS=FOOTER>
<ADDRESS CLASS=FOOTER>Models for Concurrent Engineering Design - 15 Jul 1997</ADDRESS>
<P><A HREF="mode_141.htm" class="NavPanel pull-right">[Next]</A> <A HREF="mode_139.htm" CLASS=NavPanel>[Previous]</A> <A HREF="mode_135.htm" CLASS="NavPanel pull-center">[Up]</A> <A HREF="model_1.htm" CLASS=NavPanel>[Top]</A>   </P>
<P>

</DIV>
</div></BODY>
</HTML>
