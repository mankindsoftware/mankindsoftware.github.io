<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML Experimental 19960712//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 19-May-1997 experimental) -->
<HEAD>
<LINK REL=TOP HREF="model_1.htm">
<LINK REL=UP HREF="model_56.htm">
<LINK REL=PREV HREF="model_60.htm">
<LINK REL=NEXT HREF="model_62.htm">
<LINK TITLE="WebMaker generated style" REL=stylesheet HREF=bootstrap.min.css TYPE="text/css"><LINK TITLE="WebMaker generated style" REL=stylesheet HREF=style.css TYPE="text/css">
<TITLE>4.1.5   FRAMES</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 19-May-1997 experimental)">
</HEAD>
<BODY CLASS=WM-BODY><div class="container">

  <DIV>
<A NAME=HEADING61></A>

<DIV CLASS=WM-DIV-HEADERS>
<P><A HREF="model_62.htm" class="NavPanel pull-right">[Next]</A> <A HREF="model_60.htm" CLASS=NavPanel>[Previous]</A> <A HREF="model_56.htm" CLASS="NavPanel pull-center">[Up]</A> <A HREF="model_1.htm" CLASS=NavPanel>[Top]</A>   </P>
<P>4.1   KNOWLEDGE-BASED EVALUATION FOR DESIGN</P>

</DIV>
<A NAME=HEADING61-0></A>
<H1 CLASS=3Heading>4.1.5   FRAMES</H1>
<P> The important software engineering concepts behind PIMES include object technology, rule-based inferencing, and declarative, Fourth Generation Languages (4GLs). While PIMES' representation of form features is frame-based, the knowledge is expressed within the expert system as productions upon which inferencing occurs. In all, information is broadly managed at the set level, characteristic of 4GLs. </P>
<P> Within PIMES, features are created and manipulated as independent data entities known as objects, using the devices of object technology, which are built upon the concepts of classes, subclasses, class hierarchies and objects <A HREF="mode_160.htm#MARKER-9-162" CLASS=Body>[Kim 87]</A> and offer the capability for data structures to communicate directly among themselves. Code and data are encapsulated into self-sustaining and modular entities.</P>
<P> <A HREF="#MARKER-9-36" CLASS=Body>Figure 23</A> illustrates class and frame representation of the features within PIMES. A frame can be an object or a class and is represented by a triangle or circle respectively. Extending from the object are property slots which are filled in with data.</P>
<P> Objects inherit properties from the class to which they are attached. Classes may also contain subclasses. The typical class hierarchies strategy may be represented by a directed acyclic graph (DAG) <A HREF="mode_160.htm#MARKER-9-162" CLASS=Body>[Kim 87]</A>. Essentially, the properties of a parent class are inherited by its subclasses.</P>
<P> Frame-based systems have the advantage of explicitly structuring and establishing relations during the initial design of the expert system. Some systems must have all relations established during processing, these relations between classes or objects often being inferred. PIMES objects may be created dynamically and can be linked dynamically to other objects or classes, inheriting properties in the process. </P>
<P>Figure 23    <A NAME=MARKER-9-36></A>PIMES Data Structure Hierarchy.</P><P><IMG ALIGN=TOP SRC=mo61im24.gif>

</DIV>

 

<DIV>

<!-- TOC -->

</DIV>

 <DIV CLASS=WM-DIV-FOOTERS><HR CLASS=FOOTER>
<ADDRESS CLASS=FOOTER>Models for Concurrent Engineering Design - 15 Jul 1997</ADDRESS>
<P><A HREF="model_62.htm" class="NavPanel pull-right">[Next]</A> <A HREF="model_60.htm" CLASS=NavPanel>[Previous]</A> <A HREF="model_56.htm" CLASS="NavPanel pull-center">[Up]</A> <A HREF="model_1.htm" CLASS=NavPanel>[Top]</A>   </P>
<P>

</DIV>
</div></BODY>
</HTML>
