<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML Experimental 19960712//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 19-May-1997 experimental) -->
<HEAD>
<LINK REL=TOP HREF="model_1.htm">
<LINK REL=UP HREF="model_88.htm">
<LINK REL=PREV HREF="model_88.htm">
<LINK REL=NEXT HREF="model_90.htm">
<LINK TITLE="WebMaker generated style" REL=stylesheet HREF=bootstrap.min.css TYPE="text/css"><LINK TITLE="WebMaker generated style" REL=stylesheet HREF=style.css TYPE="text/css">
<TITLE>5.1   THE DESIGN PROCESSOR</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 19-May-1997 experimental)">
</HEAD>
<BODY CLASS=WM-BODY><div class="container">

  <DIV>
<A NAME=HEADING89></A>

<DIV CLASS=WM-DIV-HEADERS>
<P><A HREF="model_90.htm" class="NavPanel pull-right">[Next]</A> <A HREF="model_88.htm" CLASS=NavPanel>[Previous]</A> <A HREF="model_88.htm" CLASS="NavPanel pull-center">[Up]</A> <A HREF="model_1.htm" CLASS=NavPanel>[Top]</A>   </P>
<P>5.0   DESIGN PROCESSING</P>

</DIV>
<A NAME=HEADING89-0></A>
<H1 CLASS=2Heading>5.1   THE DESIGN PROCESSOR</H1>
<P> Advisors must work within a computer environment that provides explicit information for evaluations. As has been seen in previous sections, some prerequisite processing must be done on the available CAD data to provide feature objects and parameters for rule-based evaluation. While preparation of information into representations suitable for various advisors may be largely automated, there is little doubt that design systems, for the time being, must include the human element.</P>
<P> In the DFM system, the human element takes foremost consideration. A great deal of information processing and management is required to prepare and analyze design data. During the development of this project, or any other constantly evolving system, the information flow from one application to another, is contingent not only on a certain order of application invocation, but on often imprecise interface specification between applications.</P>
<P> Inclusion of the human element helps facilitate application integration when development is based on uncertain application behavior. Once the interface between applications becomes settled, the requirements to automate information from one application to another often becomes evident and easier to implement. </P>
<P> In the course of exploring comfortable human-computer interface paradigms regarding design advisor activities, the Design Processor paradigm has been developed. As with a word processor, which places the document at the center of all activities, the Design Processor focuses upon the design as an artifact, considering process as peripheral to the design. It shall be seen how DFM provides an interface which both anticipates the inclusion of new tools, allows consistent use of older tools, and permits incremental automation the portions of the design process.</P>
<P> <A HREF="#MARKER-9-58" CLASS=Body>Figure 37</A> is a recapitulation of the elements of the DFM system. There is incorporated another aspect of this system - a feed into the finite-element analysis utilities such as C-Flow<SUP CLASS="Superscript Body">TM</SUP> and C-Cool<SUP CLASS="Superscript Body">TM</SUP>. As with PIMES, the feedback of the numerical simulation will be merely that of a critic. Even though synthesis of a process is occurring, no alternatives are directly provided by those applications. That is, no part of the program tells the designer what specifications of the model must be changed. </P>
<P>Figure 37    <A NAME=MARKER-9-58></A>Design for Molding Processing and Data Hierarchy</P><P><IMG ALIGN=TOP SRC=mo89im30.gif>
<P> The original display of the DFM Design Processor is reproduced in <A HREF="#MARKER-9-59" CLASS=Body>Figure 38</A>. This display was only one of a series of screens depicting the each state of the transformation of representations required to polygonize the IGES file into a Noodles model, abstract feature information and images, evaluate the PIMES critiques and provide the user with an interactive presentation of the solid model and its evaluations.</P>
<P> The drawbacks to the display of <A HREF="#MARKER-9-59" CLASS=Body>Figure 38</A> are related primarily to the lack of separation of the representations from one another, and from the explicit iconic depiction of the processes which act on them. On the implementation side, there may also be additions of agents and representations, requiring an adjustment of the visual structure. For example, the inclusion of the Medial Axis Transformation representation and utilities would have required a re-coordination of node and link icons to accommodate the new addition, as well as a new screen.</P>
<P> </P>
<P>Figure 38    <A NAME=MARKER-9-59></A>One Screen of the Original User Interface of DFM</P><P><IMG ALIGN=TOP SRC=mo89im31.gif>
<P> With the original user interface, the process flow was of foremost importance. But the designer should not care about the intermediate steps toward critiquing a part. There are elements of the transformation that could or should be hidden from the user. To the designer, the ideal system to do this would be modeled as a direct interface to the model. While this may seem over-simplified, it serves to act as a guide for the reduction of complexity of the entire system. While there is a tacit acknowledgment of the requirements for transformation, processing between the CAD model and its critique and visualization is simply extraneous activity to the user. The user wants to see results declared and should not care about how to get there.</P>
<P> Automation allows a monolithic sequencing of processes such that the intermediate transforms are hidden. But the intermediate applications that perform the transforms are subject to change and improvement, or simply may be prototype utilities. Automation is simply not capable of the flexibility required to swap out applications or add new ones, especially within an evolving environment.</P>
<P> It became clear that a new system, in which transformations could be invoked independently, with explicit results and status available, would have to be artifact-centered. The result was that of the design processing model, which used the word processor as its metaphor. With the design processor, the methods of transformation and analysis are separated from the artifact objects of design.</P>

</DIV>

 

<DIV>

<!-- TOC --><DL CLASS=FOOTER>
<DL CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="model_90.htm#HEADING90-0" CLASS=FOOTER><B CLASS=FOOTER>5.1.1  </B> - OBJECTS</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="model_91.htm#HEADING91-0" CLASS=FOOTER><B CLASS=FOOTER>5.1.2  </B> - METHODS</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="model_96.htm#HEADING96-0" CLASS=FOOTER><B CLASS=FOOTER>5.1.3  </B> - DISCUSSION</A>
<DD CLASS=FOOTER>
</DL>
</DL>


</DIV>

 <DIV CLASS=WM-DIV-FOOTERS><HR CLASS=FOOTER>
<ADDRESS CLASS=FOOTER>Models for Concurrent Engineering Design - 15 Jul 1997</ADDRESS>
<P><A HREF="model_90.htm" class="NavPanel pull-right">[Next]</A> <A HREF="model_88.htm" CLASS=NavPanel>[Previous]</A> <A HREF="model_88.htm" CLASS="NavPanel pull-center">[Up]</A> <A HREF="model_1.htm" CLASS=NavPanel>[Top]</A>   </P>
<P>

</DIV>
</div></BODY>
</HTML>
